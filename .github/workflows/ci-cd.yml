name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'doctors/**'
      - 'appointments/**'
      - 'frontend/**'
  push:
    branches: [ main ]
    paths:
      - 'doctors/**'
      - 'appointments/**'
      - 'frontend/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [ 'doctors', 'appointments', 'frontend' ]
        include:
          - service: 'doctors'
            path: 'doctors/**'
          - service: 'appointments'
            path: 'appointments/**'
          - service: 'frontend'
            path: 'frontend/**'
    defaults:
      run:
        working-directory: ${{ matrix.service }}
    steps:
    - uses: actions/checkout@v4.1.1

    - name: Check for changes
      id: check_changes
      uses: dorny/paths-filter@v2.11.1
      with:
        filters: |
          changed:
            - '${{ matrix.path }}'

    - name: Set up Docker Buildx
      if: steps.check_changes.outputs.changed == 'true'
      uses: docker/setup-buildx-action@v3.0.0

    - name: Login to DockerHub
      if: steps.check_changes.outputs.changed == 'true'
      uses: docker/login-action@v3.0.0
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      if: steps.check_changes.outputs.changed == 'true'
      uses: docker/build-push-action@v5.1.0
      with:
        context: ./${{ matrix.service }}
        file: ./${{ matrix.service }}/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}-service:${{ github.run_number }}

    - name: Pull the latest changes from the repository
      if: steps.check_changes.outputs.changed == 'true'
      run: git pull origin ${{ github.ref }}

    - name: Update docker-compose.yaml
      if: steps.check_changes.outputs.changed == 'true'
      run: |
        sed -i 's|${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}-service:.*|${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}-service:${{ github.run_number }}|' ../docker-compose.yaml
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        git add ../docker-compose.yaml
        git commit -m "Update docker-compose.yaml for ${{ matrix.service }} service"
        RETRY_COUNT=0
        MAX_RETRIES=3
        DELAY_SECONDS=10
        until git push origin HEAD:${{ github.head_ref || github.ref }} --force-with-lease; do
          exit_code=$?
          echo "Push failed, retrying in $DELAY_SECONDS seconds..."
          sleep $DELAY_SECONDS
          ((RETRY_COUNT=RETRY_COUNT+1))
          if [ "$RETRY_COUNT" -ge "$MAX_RETRIES" ]; then
            echo "Maximum retries reached, exiting with error"
            exit $exit_code
          fi
          git pull origin ${{ github.head_ref || github.ref }}
        done
